#reader(lib"read.ss""wxme")WXME0108 ## 
#|
   This file uses the GRacket editor format.
   Open this file in DrRacket version 6.2.1 or later to read it.

   Most likely, it was created by saving a program in DrRacket,
   and it probably contains a program with non-text elements
   (such as images or comment boxes).

            http://racket-lang.org/
|#
 32 7 #"wxtext\0"
3 1 6 #"wxtab\0"
1 1 8 #"wximage\0"
2 0 8 #"wxmedia\0"
4 1 34 #"(lib \"syntax-browser.ss\" \"mrlib\")\0"
1 0 16 #"drscheme:number\0"
3 0 44 #"(lib \"number-snip.ss\" \"drscheme\" \"private\")\0"
1 0 36 #"(lib \"comment-snip.ss\" \"framework\")\0"
1 0 93
(
 #"((lib \"collapsed-snipclass.ss\" \"framework\") (lib \"collapsed-sni"
 #"pclass-wxme.ss\" \"framework\"))\0"
) 0 0 43 #"(lib \"collapsed-snipclass.ss\" \"framework\")\0"
0 0 19 #"drscheme:sexp-snip\0"
0 0 36 #"(lib \"cache-image-snip.ss\" \"mrlib\")\0"
1 0 68
(
 #"((lib \"image-core.ss\" \"mrlib\") (lib \"image-core-wxme.rkt\" \"mr"
 #"lib\"))\0"
) 1 0 29 #"drscheme:bindings-snipclass%\0"
1 0 101
(
 #"((lib \"ellipsis-snip.rkt\" \"drracket\" \"private\") (lib \"ellipsi"
 #"s-snip-wxme.rkt\" \"drracket\" \"private\"))\0"
) 2 0 88
(
 #"((lib \"pict-snip.rkt\" \"drracket\" \"private\") (lib \"pict-snip.r"
 #"kt\" \"drracket\" \"private\"))\0"
) 0 0 34 #"(lib \"bullet-snip.rkt\" \"browser\")\0"
0 0 25 #"(lib \"matrix.ss\" \"htdp\")\0"
1 0 22 #"drscheme:lambda-snip%\0"
1 0 29 #"drclickable-string-snipclass\0"
0 0 26 #"drracket:spacer-snipclass\0"
0 0 57
#"(lib \"hrule-snip.rkt\" \"macro-debugger\" \"syntax-browser\")\0"
1 0 26 #"drscheme:pict-value-snip%\0"
0 0 45 #"(lib \"image-snipr.ss\" \"slideshow\" \"private\")\0"
1 0 38 #"(lib \"pict-snipclass.ss\" \"slideshow\")\0"
2 0 55 #"(lib \"vertical-separator-snip.ss\" \"stepper\" \"private\")\0"
1 0 18 #"drscheme:xml-snip\0"
1 0 31 #"(lib \"xml-snipclass.ss\" \"xml\")\0"
1 0 21 #"drscheme:scheme-snip\0"
2 0 34 #"(lib \"scheme-snipclass.ss\" \"xml\")\0"
1 0 10 #"text-box%\0"
1 0 32 #"(lib \"text-snipclass.ss\" \"xml\")\0"
1 0 1 6 #"wxloc\0"
          0 0 72 0 1 #"\0"
0 75 1 #"\0"
0 12 90 -1 90 -1 3 -1 0 1 0 1 0 0 0 0 0 0 0 0 0 0 0 255 255 255 1 -1 0 9
#"Standard\0"
0 75 10 #"Monospace\0"
0 12 90 -1 90 -1 3 -1 0 1 0 1 0 0 0 0 0 0 0 0 0 0 0 255 255 255 1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 1 1 1 1 1 1 0 0 0 0 0 0 -1 -1 2 24
#"framework:default-color\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 255 255 255 -1 -1 2
1 #"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 150 0 150 0 0 0 -1 -1 2 15
#"text:ports out\0"
0 -1 1 #"\0"
1 0 -1 92 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 150 0 150 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 93 -1 -1 -1 0 0 0 0 0 0 0 0 0 1.0 1.0 1.0 255 0 0 0 0 0 -1
-1 2 15 #"text:ports err\0"
0 -1 1 #"\0"
1 0 -1 92 93 -1 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 255 0 0 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 0 0 175 0 0 0 -1 -1 2 17
#"text:ports value\0"
0 -1 1 #"\0"
1 0 -1 92 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 0 0 175 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1.0 0 92 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1.0 1.0 1.0 34 139 34 0 0 0 -1
-1 2 27 #"Matching Parenthesis Style\0"
0 -1 1 #"\0"
1.0 0 92 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1.0 1.0 1.0 34 139 34 0 0 0 -1
-1 2 1 #"\0"
0 -1 1 #"\0"
1 0 -1 92 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 38 38 128 0 0 0 -1 -1 2 37
#"framework:syntax-color:scheme:symbol\0"
0 -1 1 #"\0"
1 0 -1 92 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 38 38 128 0 0 0 -1 -1 2 38
#"framework:syntax-color:scheme:keyword\0"
0 -1 1 #"\0"
1 0 -1 92 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 38 38 128 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 92 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 194 116 31 0 0 0 -1 -1 2
38 #"framework:syntax-color:scheme:comment\0"
0 -1 1 #"\0"
1 0 -1 92 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 194 116 31 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 92 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 41 128 38 0 0 0 -1 -1 2 37
#"framework:syntax-color:scheme:string\0"
0 -1 1 #"\0"
1 0 -1 92 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 41 128 38 0 0 0 -1 -1 2 35
#"framework:syntax-color:scheme:text\0"
0 -1 1 #"\0"
1 0 -1 92 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 41 128 38 0 0 0 -1 -1 2 39
#"framework:syntax-color:scheme:constant\0"
0 -1 1 #"\0"
1 0 -1 92 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 41 128 38 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 92 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 132 60 36 0 0 0 -1 -1 2 49
#"framework:syntax-color:scheme:hash-colon-keyword\0"
0 -1 1 #"\0"
1 0 -1 92 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 132 60 36 0 0 0 -1 -1 2 42
#"framework:syntax-color:scheme:parenthesis\0"
0 -1 1 #"\0"
1 0 -1 92 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 132 60 36 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 92 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 255 0 0 0 0 0 -1 -1 2 36
#"framework:syntax-color:scheme:error\0"
0 -1 1 #"\0"
1 0 -1 92 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 255 0 0 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 92 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 0 0 0 0 0 0 -1 -1 2 36
#"framework:syntax-color:scheme:other\0"
0 -1 1 #"\0"
1 0 -1 92 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 0 0 0 0 0 0 -1 -1 2 16
#"Misspelled Text\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 0 0 0 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 92 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 81 112 203 0 0 0 -1 -1 2
38 #"drracket:check-syntax:lexically-bound\0"
0 -1 1 #"\0"
1 0 -1 92 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 81 112 203 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 92 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 178 34 34 0 0 0 -1 -1 2 28
#"drracket:check-syntax:set!d\0"
0 -1 1 #"\0"
1 0 -1 92 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 178 34 34 0 0 0 -1 -1 2 37
#"drracket:check-syntax:unused-require\0"
0 -1 1 #"\0"
1 0 -1 92 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 255 0 0 0 0 0 -1 -1 2 36
#"drracket:check-syntax:free-variable\0"
0 -1 1 #"\0"
1 0 -1 92 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 255 0 0 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 92 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 68 0 203 0 0 0 -1 -1 2 31
#"drracket:check-syntax:imported\0"
0 -1 1 #"\0"
1 0 -1 92 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 68 0 203 0 0 0 -1 -1 2 47
#"drracket:check-syntax:my-obligation-style-pref\0"
0 -1 1 #"\0"
1 0 -1 92 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 178 34 34 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 92 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 0 116 0 0 0 0 -1 -1 2 50
#"drracket:check-syntax:their-obligation-style-pref\0"
0 -1 1 #"\0"
1 0 -1 92 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 0 116 0 0 0 0 -1 -1 2 48
#"drracket:check-syntax:unk-obligation-style-pref\0"
0 -1 1 #"\0"
1 0 -1 92 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 0 0 0 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 92 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 139 142 28 0 0 0 -1 -1 2
49 #"drracket:check-syntax:both-obligation-style-pref\0"
0 -1 1 #"\0"
1 0 -1 92 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 139 142 28 0 0 0 -1 -1 2
26 #"plt:htdp:test-coverage-on\0"
0 -1 1 #"\0"
1 0 -1 92 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 0 0 0 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 92 -1 93 -1 -1 0 1 0 0 0 1 0 0 0 0 0 0 255 165 0 0 0 0 -1 -1 2 27
#"plt:htdp:test-coverage-off\0"
0 -1 1 #"\0"
1 0 -1 92 -1 93 -1 -1 0 1 0 0 0 1 0 0 0 0 0 0 255 165 0 0 0 0 -1 -1 4 1
#"\0"
0 70 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 1.0 1.0 1.0 1.0 1.0 1.0 0 0 0 0 0 0
-1 -1 4 4 #"XML\0"
0 70 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 1.0 1.0 1.0 1.0 1.0 1.0 0 0 0 0 0 0
-1 -1 2 37 #"plt:module-language:test-coverage-on\0"
0 -1 1 #"\0"
1 0 -1 92 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 0 0 0 0 0 0 -1 -1 2 38
#"plt:module-language:test-coverage-off\0"
0 -1 1 #"\0"
1 0 -1 92 -1 93 -1 -1 0 1 0 0 0 1 0 0 0 0 0 0 255 165 0 0 0 0 -1 -1 4 1
#"\0"
0 71 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 1.0 1.0 1.0 1.0 1.0 1.0 0 0 0 0 0 0
-1 -1 4 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 1 0 0 0 0 0 0 0 0 1.0 1.0 1.0 0 0 255 0 0 0 -1
-1 4 1 #"\0"
0 71 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 1 0 0 0 0 0 0 0 0 1.0 1.0 1.0 0 0 255 0 0 0 -1
-1 4 1 #"\0"
0 71 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1.0 1.0 1.0 0 100 0 0 0 0 -1
-1 0 1 #"\0"
0 75 10 #"Monospace\0"
0.0 12 90 -1 90 -1 3 -1 0 1 0 1 0 0 0.0 0.0 0.0 0.0 0.0 0.0 0 0 0 255
255 255 1 -1 2 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 1 0.0 0.0 0.0 0.0 0.0 0.0 0 0 0 255
255 255 -1 -1 2 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 92 -1 93 -1 -1 0 1 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 150 0 150 0
0 0 -1 -1 2 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 92 93 -1 -1 -1 0 1 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 255 0 0 0 0
0 -1 -1 2 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 92 -1 93 -1 -1 0 1 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 0 0 175 0 0
0 -1 -1 2 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 0 0 0 0 0 0
-1 -1 2 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 1 0 0 0 0 0 1.0 1.0 1.0 1.0 1.0 1.0 0 0 0 0 0 0
-1 -1 2 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 1 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 65 105 225 0
0 0 -1 -1 17 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 1 0 0.0 0.0 0.0 0.0 0.0 0.0 0 0 0 255
255 255 -1 -1 24 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 1 0 0.0 0.0 0.0 0.0 0.0 0.0 0 0 0 255
255 255 -1 -1 15 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 1 0 0.0 0.0 0.0 0.0 0.0 0.0 0 0 0 255
255 255 -1 -1 14 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 1 0 0.0 0.0 0.0 0.0 0.0 0.0 0 0 0 255
255 255 -1 -1 44 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 1 0 0.0 0.0 0.0 0.0 0.0 0.0 0 0 0 255
255 255 -1 -1 46 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 1 0 0.0 0.0 0.0 0.0 0.0 0.0 0 0 0 255
255 255 -1 -1 4 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 1 0 0.0 0.0 0.0 0.0 0.0 0.0 0 0 0 255
255 255 -1 -1 0 1 #"\0"
0 -1 1 #"\0"
0 11 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 1.0 1.0 1.0 1.0 1.0 1.0 0 0 0 0 0 0
-1 -1 2 1 #"\0"
0 -1 1 #"\0"
0 11 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 1.0 1.0 1.0 1.0 1.0 1.0 0 0 0 0 0 0
-1 -1           0 2574 0 4 3 85
(
 #";; The first three lines of this file were inserted by DrRacket. The"
 #"y record metadata"
) 0 0 4 29 1 #"\n"
0 0 4 3 85
(
 #";; about the language level of this file in a form that our tools ca"
 #"n easily process."
) 0 0 4 29 1 #"\n"
0 0 4 3 196
(
 #"#reader(lib \"htdp-intermediate-lambda-reader.ss\" \"lang\")((modnam"
 #"e |problem set 7|) (read-case-sensitive #t) (teachpacks ()) (htdp-se"
 #"ttings #(#t constructor repeating-decimal #f #t none #f () #f)))"
) 0 0 4 29 1 #"\n"
0 0 17 3 12 #";;Homework 7"
0 0 24 29 1 #"\n"
0 0 17 3 22 #";;Alexander Zilbersher"
0 0 24 29 1 #"\n"
0 0 17 3 13 #";;Jialin Zhou"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 7 #"require"
0 0 24 3 1 #" "
0 0 14 3 11 #"2htdp/image"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 7 #"require"
0 0 24 3 1 #" "
0 0 14 3 14 #"2htdp/universe"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 7 #"require"
0 0 24 3 1 #" "
0 0 14 3 8 #"rackunit"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 7 #"require"
0 0 24 3 1 #" "
0 0 14 3 16 #"rackunit/text-ui"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 10 #";Problem 1"
0 0 24 29 1 #"\n"
0 0 17 3 2 #"#|"
0 0 17 29 1 #"\n"
0 0 17 3 37 #"Exercise 222. Create test suites for "
0 0 17 3 28 #"the following two functions:"
0 0 17 29 1 #"\n"
0 0 17 3 12 #"; Lon -> Lon"
0 0 17 29 1 #"\n"
0 0 17 3 27 #"; add 1 to each number on l"
0 0 17 29 1 #"\n"
0 0 17 3 1 #"("
0 0 17 3 6 #"define"
0 0 17 3 2 #" ("
0 0 17 3 5 #"add1*"
0 0 17 3 1 #" "
0 0 17 3 1 #"l"
0 0 17 3 1 #")"
0 0 17 29 1 #"\n"
0 0 17 3 3 #"  ("
0 0 17 3 4 #"cond"
0 0 17 29 1 #"\n"
0 0 17 3 6 #"    [("
0 0 17 3 6 #"empty?"
0 0 17 3 1 #" "
0 0 17 3 1 #"l"
0 0 17 3 2 #") "
0 0 17 3 1 #"'"
0 0 17 3 3 #"()]"
0 0 17 29 1 #"\n"
0 0 17 3 5 #"    ["
0 0 17 3 4 #"else"
0 0 17 29 1 #"\n"
0 0 17 3 6 #"     ("
0 0 17 3 4 #"cons"
0 0 17 3 2 #" ("
0 0 17 3 4 #"add1"
0 0 17 3 2 #" ("
0 0 17 3 5 #"first"
0 0 17 3 1 #" "
0 0 17 3 1 #"l"
0 0 17 3 2 #"))"
0 0 17 29 1 #"\n"
0 0 17 3 12 #"           ("
0 0 17 3 5 #"add1*"
0 0 17 3 2 #" ("
0 0 17 3 4 #"rest"
0 0 17 3 1 #" "
0 0 17 3 1 #"l"
0 0 17 3 6 #")))]))"
0 0 17 29 1 #"\n"
0 0 17 3 5 #"     "
0 0 17 29 1 #"\n"
0 0 17 3 12 #"; Lon -> Lon"
0 0 17 29 1 #"\n"
0 0 17 3 28 #"; adds 5 to each number on l"
0 0 17 29 1 #"\n"
0 0 17 3 1 #"("
0 0 17 3 6 #"define"
0 0 17 3 2 #" ("
0 0 17 3 5 #"plus5"
0 0 17 3 1 #" "
0 0 17 3 1 #"l"
0 0 17 3 1 #")"
0 0 17 29 1 #"\n"
0 0 17 3 3 #"  ("
0 0 17 3 4 #"cond"
0 0 17 29 1 #"\n"
0 0 17 3 6 #"    [("
0 0 17 3 6 #"empty?"
0 0 17 3 1 #" "
0 0 17 3 1 #"l"
0 0 17 3 2 #") "
0 0 17 3 1 #"'"
0 0 17 3 3 #"()]"
0 0 17 29 1 #"\n"
0 0 17 3 5 #"    ["
0 0 17 3 4 #"else"
0 0 17 29 1 #"\n"
0 0 17 3 6 #"     ("
0 0 17 3 4 #"cons"
0 0 17 3 2 #" ("
0 0 17 3 1 #"+"
0 0 17 3 2 #" ("
0 0 17 3 5 #"first"
0 0 17 3 1 #" "
0 0 17 3 1 #"l"
0 0 17 3 2 #") "
0 0 17 3 1 #"5"
0 0 17 3 1 #")"
0 0 17 29 1 #"\n"
0 0 17 3 12 #"           ("
0 0 17 3 5 #"plus5"
0 0 17 3 2 #" ("
0 0 17 3 4 #"rest"
0 0 17 3 1 #" "
0 0 17 3 1 #"l"
0 0 17 3 6 #")))]))"
0 0 17 29 1 #"\n"
0 0 17 29 1 #"\n"
0 0 17 3 4 #"Then"
0 0 17 3 1 #" "
0 0 17 3 8 #"abstract"
0 0 17 3 1 #" "
0 0 17 3 4 #"over"
0 0 17 3 1 #" "
0 0 17 3 5 #"them."
0 0 17 3 1 #" "
0 0 17 3 6 #"Define"
0 0 17 3 1 #" "
0 0 17 3 3 #"the"
0 0 17 3 1 #" "
0 0 17 3 5 #"above"
0 0 17 3 1 #" "
0 0 17 3 3 #"two"
0 0 17 3 1 #" "
0 0 17 3 9 #"functions"
0 0 17 3 1 #" "
0 0 17 3 2 #"in"
0 0 17 3 1 #" "
0 0 17 3 5 #"terms"
0 0 17 3 1 #" "
0 0 17 3 2 #"of"
0 0 17 3 1 #" "
0 0 17 3 3 #"the"
0 0 17 29 1 #"\n"
0 0 17 3 11 #"abstraction"
0 0 17 3 1 #" "
0 0 17 3 2 #"as"
0 0 17 3 1 #" "
0 0 17 3 10 #"one-liners"
0 0 17 3 1 #" "
0 0 17 3 3 #"and"
0 0 17 3 1 #" "
0 0 17 3 3 #"use"
0 0 17 3 1 #" "
0 0 17 3 3 #"the"
0 0 17 3 1 #" "
0 0 17 3 8 #"existing"
0 0 17 3 1 #" "
0 0 17 3 4 #"test"
0 0 17 3 1 #" "
0 0 17 3 6 #"suites"
0 0 17 3 1 #" "
0 0 17 3 2 #"to"
0 0 17 3 1 #" "
0 0 17 3 7 #"confirm"
0 0 17 3 1 #" "
0 0 17 3 4 #"that"
0 0 17 29 1 #"\n"
0 0 17 3 3 #"the"
0 0 17 3 1 #" "
0 0 17 3 7 #"revised"
0 0 17 3 1 #" "
0 0 17 3 11 #"definitions"
0 0 17 3 1 #" "
0 0 17 3 4 #"work"
0 0 17 3 1 #" "
0 0 17 3 9 #"properly."
0 0 17 3 1 #" "
0 0 17 3 7 #"Finally"
0 0 17 3 1 #","
0 0 17 3 1 #" "
0 0 17 3 6 #"design"
0 0 17 3 1 #" "
0 0 17 3 1 #"a"
0 0 17 3 1 #" "
0 0 17 3 8 #"function"
0 0 17 3 1 #" "
0 0 17 3 4 #"that"
0 0 17 29 1 #"\n"
0 0 17 3 9 #"subtracts"
0 0 17 3 1 #" "
0 0 17 3 1 #"2"
0 0 17 3 1 #" "
0 0 17 3 4 #"from"
0 0 17 3 1 #" "
0 0 17 3 4 #"each"
0 0 17 3 1 #" "
0 0 17 3 6 #"number"
0 0 17 3 1 #" "
0 0 17 3 2 #"on"
0 0 17 3 1 #" "
0 0 17 3 1 #"a"
0 0 17 3 1 #" "
0 0 17 3 5 #"given"
0 0 17 3 1 #" "
0 0 17 3 5 #"list."
0 0 17 3 1 #"}"
0 0 17 29 1 #"\n"
0 0 17 3 2 #"|#"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 2 #" ("
0 0 14 3 4 #"math"
0 0 24 3 1 #" "
0 0 14 3 1 #"l"
0 0 24 3 1 #" "
0 0 14 3 1 #"f"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 14 3 3 #"map"
0 0 24 3 1 #" "
0 0 14 3 1 #"f"
0 0 24 3 1 #" "
0 0 14 3 1 #"l"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 2 #" ("
0 0 14 3 5 #"add1*"
0 0 24 3 1 #" "
0 0 14 3 1 #"l"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 14 3 4 #"math"
0 0 24 3 1 #" "
0 0 14 3 1 #"l"
0 0 24 3 1 #" "
0 0 14 3 4 #"add1"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 2 #" ("
0 0 14 3 4 #"add5"
0 0 24 3 1 #" "
0 0 14 3 1 #"x"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 14 3 1 #"+"
0 0 24 3 1 #" "
0 0 14 3 1 #"x"
0 0 24 3 1 #" "
0 0 21 3 1 #"5"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 2 #" ("
0 0 14 3 5 #"plus5"
0 0 24 3 1 #" "
0 0 14 3 1 #"l"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 14 3 4 #"math"
0 0 24 3 1 #" "
0 0 14 3 1 #"l"
0 0 24 3 1 #" "
0 0 14 3 4 #"add5"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 2 #" ("
0 0 14 3 6 #"minus2"
0 0 24 3 1 #" "
0 0 14 3 1 #"x"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 14 3 1 #"-"
0 0 24 3 1 #" "
0 0 14 3 1 #"x"
0 0 24 3 1 #" "
0 0 21 3 1 #"2"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 2 #" ("
0 0 14 3 4 #"sub2"
0 0 24 3 1 #" "
0 0 14 3 1 #"l"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 14 3 4 #"math"
0 0 24 3 1 #" "
0 0 14 3 1 #"l"
0 0 24 3 1 #" "
0 0 14 3 6 #"minus2"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 9 #"run-tests"
0 0 24 3 2 #" ("
0 0 14 3 10 #"test-suite"
0 0 24 29 1 #"\n"
0 0 24 3 6 #"      "
0 0 19 3 11 #"\"Problem 1\""
0 0 24 29 1 #"\n"
0 0 24 3 7 #"      ("
0 0 14 3 9 #"test-case"
0 0 24 29 1 #"\n"
0 0 24 3 7 #"       "
0 0 19 3 6 #"\"add1\""
0 0 24 29 1 #"\n"
0 0 24 3 8 #"       ("
0 0 14 3 6 #"equal?"
0 0 24 3 1 #"("
0 0 14 3 5 #"add1*"
0 0 24 3 2 #" ("
0 0 14 3 4 #"list"
0 0 24 3 1 #" "
0 0 21 3 1 #"1"
0 0 24 3 1 #" "
0 0 21 3 1 #"2"
0 0 24 3 1 #" "
0 0 21 3 1 #"3"
0 0 24 3 1 #" "
0 0 21 3 1 #"4"
0 0 24 3 1 #" "
0 0 21 3 1 #"5"
0 0 24 3 3 #"))("
0 0 14 3 4 #"list"
0 0 24 3 1 #" "
0 0 21 3 1 #"2"
0 0 24 3 1 #" "
0 0 21 3 1 #"3"
0 0 24 3 1 #" "
0 0 21 3 1 #"4"
0 0 24 3 1 #" "
0 0 21 3 1 #"5"
0 0 24 3 1 #" "
0 0 21 3 1 #"6"
0 0 24 3 3 #")))"
0 0 24 29 1 #"\n"
0 0 24 3 7 #"      ("
0 0 14 3 9 #"test-case"
0 0 24 29 1 #"\n"
0 0 24 3 7 #"       "
0 0 19 3 7 #"\"plus5\""
0 0 24 29 1 #"\n"
0 0 24 3 8 #"       ("
0 0 14 3 6 #"equal?"
0 0 24 3 1 #"("
0 0 14 3 5 #"plus5"
0 0 24 3 2 #" ("
0 0 14 3 4 #"list"
0 0 24 3 1 #" "
0 0 21 3 1 #"1"
0 0 24 3 1 #" "
0 0 21 3 1 #"2"
0 0 24 3 1 #" "
0 0 21 3 1 #"3"
0 0 24 3 1 #" "
0 0 21 3 1 #"4"
0 0 24 3 1 #" "
0 0 21 3 1 #"5"
0 0 24 3 3 #"))("
0 0 14 3 4 #"list"
0 0 24 3 1 #" "
0 0 21 3 1 #"6"
0 0 24 3 1 #" "
0 0 21 3 1 #"7"
0 0 24 3 1 #" "
0 0 21 3 1 #"8"
0 0 24 3 1 #" "
0 0 21 3 1 #"9"
0 0 24 3 1 #" "
0 0 21 3 2 #"10"
0 0 24 3 3 #")))"
0 0 24 29 1 #"\n"
0 0 24 3 7 #"      ("
0 0 14 3 9 #"test-case"
0 0 24 29 1 #"\n"
0 0 24 3 7 #"       "
0 0 19 3 6 #"\"sub2\""
0 0 24 29 1 #"\n"
0 0 24 3 8 #"       ("
0 0 14 3 6 #"equal?"
0 0 24 3 1 #"("
0 0 14 3 4 #"sub2"
0 0 24 3 2 #" ("
0 0 14 3 4 #"list"
0 0 24 3 1 #" "
0 0 21 3 1 #"1"
0 0 24 3 1 #" "
0 0 21 3 1 #"2"
0 0 24 3 1 #" "
0 0 21 3 1 #"3"
0 0 24 3 1 #" "
0 0 21 3 1 #"4"
0 0 24 3 1 #" "
0 0 21 3 1 #"5"
0 0 24 3 3 #"))("
0 0 14 3 4 #"list"
0 0 24 3 1 #" "
0 0 21 3 2 #"-1"
0 0 24 3 1 #" "
0 0 21 3 1 #"0"
0 0 24 3 1 #" "
0 0 21 3 1 #"1"
0 0 24 3 1 #" "
0 0 21 3 1 #"2"
0 0 24 3 1 #" "
0 0 21 3 1 #"3"
0 0 24 3 5 #")))))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 24 3 1 #"("
0 0 14 3 5 #"add1*"
0 0 24 3 2 #" ("
0 0 14 3 4 #"list"
0 0 24 3 1 #" "
0 0 21 3 1 #"1"
0 0 24 3 1 #" "
0 0 21 3 1 #"2"
0 0 24 3 1 #" "
0 0 21 3 1 #"3"
0 0 24 3 1 #" "
0 0 21 3 1 #"4"
0 0 24 3 1 #" "
0 0 21 3 1 #"5"
0 0 24 3 3 #"))("
0 0 14 3 4 #"list"
0 0 24 3 1 #" "
0 0 21 3 1 #"2"
0 0 24 3 1 #" "
0 0 21 3 1 #"3"
0 0 24 3 1 #" "
0 0 21 3 1 #"4"
0 0 24 3 1 #" "
0 0 21 3 1 #"5"
0 0 24 3 1 #" "
0 0 21 3 1 #"6"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 24 3 1 #"("
0 0 14 3 5 #"plus5"
0 0 24 3 2 #" ("
0 0 14 3 4 #"list"
0 0 24 3 1 #" "
0 0 21 3 1 #"1"
0 0 24 3 1 #" "
0 0 21 3 1 #"2"
0 0 24 3 1 #" "
0 0 21 3 1 #"3"
0 0 24 3 1 #" "
0 0 21 3 1 #"4"
0 0 24 3 1 #" "
0 0 21 3 1 #"5"
0 0 24 3 3 #"))("
0 0 14 3 4 #"list"
0 0 24 3 1 #" "
0 0 21 3 1 #"6"
0 0 24 3 1 #" "
0 0 21 3 1 #"7"
0 0 24 3 1 #" "
0 0 21 3 1 #"8"
0 0 24 3 1 #" "
0 0 21 3 1 #"9"
0 0 24 3 1 #" "
0 0 21 3 2 #"10"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 24 3 1 #"("
0 0 14 3 4 #"sub2"
0 0 24 3 2 #" ("
0 0 14 3 4 #"list"
0 0 24 3 1 #" "
0 0 21 3 1 #"1"
0 0 24 3 1 #" "
0 0 21 3 1 #"2"
0 0 24 3 1 #" "
0 0 21 3 1 #"3"
0 0 24 3 1 #" "
0 0 21 3 1 #"4"
0 0 24 3 1 #" "
0 0 21 3 1 #"5"
0 0 24 3 3 #"))("
0 0 14 3 4 #"list"
0 0 24 3 1 #" "
0 0 21 3 2 #"-1"
0 0 24 3 1 #" "
0 0 21 3 1 #"0"
0 0 24 3 1 #" "
0 0 21 3 1 #"1"
0 0 24 3 1 #" "
0 0 21 3 1 #"2"
0 0 24 3 1 #" "
0 0 21 3 1 #"3"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 10 #";Problem 2"
0 0 24 29 1 #"\n"
0 0 17 3 2 #"#|"
0 0 17 29 1 #"\n"
0 0 17 3 8 #"Exercise"
0 0 17 3 1 #" "
0 0 17 3 4 #"229."
0 0 17 3 1 #" "
0 0 17 3 4 #"Here"
0 0 17 3 1 #" "
0 0 17 3 2 #"is"
0 0 17 3 4 #" one"
0 0 17 3 1 #" "
0 0 17 3 4 #"more"
0 0 17 3 1 #" "
0 0 17 3 10 #"parametric"
0 0 17 3 1 #" "
0 0 17 3 4 #"data"
0 0 17 3 1 #" "
0 0 17 3 11 #"definition:"
0 0 17 29 1 #"\n"
0 0 17 3 25 #"; A [Maybe X] is one of: "
0 0 17 29 1 #"\n"
0 0 17 3 13 #"; \342\200\223 #false "
0 0 17 29 1 #"\n"
0 0 17 3 7 #"; \342\200\223 X"
0 0 17 29 1 #"\n"
0 0 17 3 9 #"Interpret"
0 0 17 3 1 #" "
0 0 17 3 3 #"the"
0 0 17 3 1 #" "
0 0 17 3 9 #"following"
0 0 17 3 1 #" "
0 0 17 3 4 #"data"
0 0 17 3 1 #" "
0 0 17 3 12 #"definitions:"
0 0 17 29 1 #"\n"
0 0 17 3 1 #"["
0 0 17 3 5 #"Maybe"
0 0 17 3 1 #" "
0 0 17 3 6 #"String"
0 0 17 3 1 #"]"
0 0 17 29 1 #"\n"
0 0 17 29 1 #"\n"
0 0 17 3 1 #"["
0 0 17 3 14 #"Maybe [List-of"
0 0 17 3 1 #" "
0 0 17 3 8 #"String]]"
0 0 17 29 1 #"\n"
0 0 17 29 1 #"\n"
0 0 17 3 1 #"["
0 0 17 3 7 #"List-of"
0 0 17 3 2 #" ["
0 0 17 3 5 #"Maybe"
0 0 17 3 1 #" "
0 0 17 3 8 #"String]]"
0 0 17 29 1 #"\n"
0 0 17 29 1 #"\n"
0 0 17 3 4 #"What"
0 0 17 3 1 #" "
0 0 17 3 4 #"does"
0 0 17 3 1 #" "
0 0 17 3 3 #"the"
0 0 17 3 1 #" "
0 0 17 3 9 #"following"
0 0 17 3 1 #" "
0 0 17 3 8 #"function"
0 0 17 3 1 #" "
0 0 17 3 9 #"signature"
0 0 17 3 1 #" "
0 0 17 3 5 #"mean:"
0 0 17 29 1 #"\n"
0 0 17 3 53 #"; String [List-of String] -> [Maybe [List-of String]]"
0 0 17 29 1 #"\n"
0 0 17 3 57 #"; returns the remainder of the list los if it contains s "
0 0 17 29 1 #"\n"
0 0 17 3 15 #"; #false otherw"
0 0 17 3 4 #"ise "
0 0 17 29 1 #"\n"
0 0 17 3 1 #"("
0 0 17 3 12 #"check-expect"
0 0 17 3 2 #" ("
0 0 17 3 6 #"occurs"
0 0 17 3 2 #" \""
0 0 17 3 2 #"a\""
0 0 17 3 2 #" ("
0 0 17 3 4 #"list"
0 0 17 3 1 #" "
0 0 17 3 1 #"\""
0 0 17 3 2 #"b\""
0 0 17 3 1 #" "
0 0 17 3 1 #"\""
0 0 17 3 2 #"a\""
0 0 17 3 1 #" "
0 0 17 3 1 #"\""
0 0 17 3 2 #"d\""
0 0 17 3 4 #")) ("
0 0 17 3 4 #"list"
0 0 17 3 1 #" "
0 0 17 3 1 #"\""
0 0 17 3 2 #"d\""
0 0 17 3 2 #"))"
0 0 17 29 1 #"\n"
0 0 17 3 1 #"("
0 0 17 3 12 #"check-expect"
0 0 17 3 2 #" ("
0 0 17 3 6 #"occurs"
0 0 17 3 2 #" \""
0 0 17 3 2 #"a\""
0 0 17 3 2 #" ("
0 0 17 3 4 #"list"
0 0 17 3 1 #" "
0 0 17 3 1 #"\""
0 0 17 3 2 #"b\""
0 0 17 3 1 #" "
0 0 17 3 1 #"\""
0 0 17 3 2 #"c\""
0 0 17 3 1 #" "
0 0 17 3 1 #"\""
0 0 17 3 2 #"d\""
0 0 17 3 3 #")) "
0 0 17 3 2 #"#f"
0 0 17 3 1 #")"
0 0 17 29 1 #"\n"
0 0 17 3 1 #"("
0 0 17 3 6 #"define"
0 0 17 3 2 #" ("
0 0 17 3 6 #"occurs"
0 0 17 3 1 #" "
0 0 17 3 1 #"s"
0 0 17 3 1 #" "
0 0 17 3 3 #"los"
0 0 17 3 1 #")"
0 0 17 29 1 #"\n"
0 0 17 3 2 #"  "
0 0 17 3 3 #"los"
0 0 17 3 1 #")"
0 0 17 29 1 #"\n"
0 0 17 3 6 #"Design"
0 0 17 3 1 #" "
0 0 17 3 3 #"the"
0 0 17 3 1 #" "
0 0 17 3 9 #"function."
0 0 17 29 1 #"\n"
0 0 17 3 2 #"|#"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 1 #";"
0 0 17 3 1 #"["
0 0 17 3 24 #"Maybe String] is one of:"
0 0 24 29 1 #"\n"
0 0 17 3 10 #"; - #false"
0 0 24 29 1 #"\n"
0 0 17 3 10 #"; - String"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 2 #";["
0 0 17 3 5 #"Maybe"
0 0 17 3 2 #" ["
0 0 17 3 27 #"List-of String]] is one of:"
0 0 24 29 1 #"\n"
0 0 17 3 10 #"; - #false"
0 0 24 29 1 #"\n"
0 0 17 3 20 #"; - [List of String]"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 44 #";[List-of [Maybe String]] or LoMS is one of:"
0 0 24 29 1 #"\n"
0 0 17 3 9 #"; - empty"
0 0 24 29 1 #"\n"
0 0 17 3 22 #"; - (cons String LoMS)"
0 0 24 29 1 #"\n"
0 0 17 3 21 #"; - (cons false LoMS)"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 61
#";The signature means that the function will go through a list"
0 0 24 29 1 #"\n"
0 0 17 3 62
#";part by part and either return an LoS of the rest of the list"
0 0 24 29 1 #"\n"
0 0 17 3 28 #";after the part that is s or"
0 0 17 3 1 #" "
0 0 17 3 6 #"#false"
0 0 17 3 1 #" "
0 0 17 3 9 #"depending"
0 0 17 3 1 #" "
0 0 17 3 2 #"on"
0 0 17 3 1 #" "
0 0 17 3 7 #"whether"
0 0 17 3 7 #" or not"
0 0 24 29 1 #"\n"
0 0 17 3 18 #";s is in the list."
0 0 24 29 1 #"\n"
0 0 17 3 2 #";("
0 0 17 3 6 #"define"
0 0 17 3 2 #" ("
0 0 17 3 12 #"occurs-templ"
0 0 17 3 1 #" "
0 0 17 3 6 #"s los)"
0 0 24 29 1 #"\n"
0 0 17 3 8 #";  (cond"
0 0 24 29 1 #"\n"
0 0 17 3 7 #";    [("
0 0 17 3 6 #"empty?"
0 0 17 3 1 #" "
0 0 17 3 9 #"los) ...]"
0 0 24 29 1 #"\n"
0 0 17 3 7 #";    [("
0 0 17 3 8 #"string=?"
0 0 17 3 1 #" "
0 0 17 3 1 #"s"
0 0 17 3 2 #" ("
0 0 17 3 5 #"first"
0 0 17 3 1 #" "
0 0 17 3 10 #"los)) ...]"
0 0 24 29 1 #"\n"
0 0 17 3 6 #";    ["
0 0 17 3 4 #"else"
0 0 17 3 2 #" ("
0 0 17 3 12 #"occurs-templ"
0 0 17 3 1 #" "
0 0 17 3 1 #"s"
0 0 17 3 2 #" ("
0 0 17 3 13 #"rest los))]))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 2 #" ("
0 0 14 3 6 #"occurs"
0 0 24 3 1 #" "
0 0 14 3 1 #"s"
0 0 24 3 1 #" "
0 0 14 3 3 #"los"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 15 3 4 #"cond"
0 0 24 29 1 #"\n"
0 0 24 3 6 #"    [("
0 0 14 3 6 #"empty?"
0 0 24 3 1 #" "
0 0 14 3 3 #"los"
0 0 24 3 2 #") "
0 0 14 3 5 #"false"
0 0 24 3 1 #"]"
0 0 24 29 1 #"\n"
0 0 24 3 6 #"    [("
0 0 14 3 8 #"string=?"
0 0 24 3 1 #" "
0 0 14 3 1 #"s"
0 0 24 3 2 #" ("
0 0 14 3 5 #"first"
0 0 24 3 1 #" "
0 0 14 3 3 #"los"
0 0 24 3 4 #")) ("
0 0 14 3 4 #"rest"
0 0 24 3 1 #" "
0 0 14 3 3 #"los"
0 0 24 3 2 #")]"
0 0 24 29 1 #"\n"
0 0 24 3 5 #"    ["
0 0 14 3 4 #"else"
0 0 24 3 2 #" ("
0 0 14 3 6 #"occurs"
0 0 24 3 1 #" "
0 0 14 3 1 #"s"
0 0 24 3 2 #" ("
0 0 14 3 4 #"rest"
0 0 24 3 1 #" "
0 0 14 3 3 #"los"
0 0 24 3 5 #"))]))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 24 3 2 #" ("
0 0 14 3 6 #"occurs"
0 0 24 3 1 #" "
0 0 19 3 3 #"\"a\""
0 0 24 3 2 #" ("
0 0 14 3 4 #"list"
0 0 24 3 1 #" "
0 0 19 3 3 #"\"b\""
0 0 24 3 1 #" "
0 0 19 3 3 #"\"a\""
0 0 24 3 1 #" "
0 0 19 3 3 #"\"d\""
0 0 24 3 4 #")) ("
0 0 14 3 4 #"list"
0 0 24 3 1 #" "
0 0 19 3 3 #"\"d\""
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 24 3 2 #" ("
0 0 14 3 6 #"occurs"
0 0 24 3 1 #" "
0 0 19 3 3 #"\"a\""
0 0 24 3 2 #" ("
0 0 14 3 4 #"list"
0 0 24 3 1 #" "
0 0 19 3 3 #"\"b\""
0 0 24 3 1 #" "
0 0 19 3 3 #"\"c\""
0 0 24 3 1 #" "
0 0 19 3 3 #"\"d\""
0 0 24 3 3 #")) "
0 0 21 3 2 #"#f"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 10 #";Problem 3"
0 0 24 29 1 #"\n"
0 0 17 3 2 #"#|"
0 0 17 29 1 #"\n"
0 0 17 3 8 #"Exercise"
0 0 17 3 1 #" "
0 0 17 3 4 #"255."
0 0 17 3 1 #" "
0 0 17 3 3 #"Use"
0 0 17 3 1 #" "
0 0 17 3 3 #"map"
0 0 17 3 1 #" "
0 0 17 3 2 #"to"
0 0 17 3 1 #" "
0 0 17 3 6 #"define"
0 0 17 3 1 #" "
0 0 17 3 3 #"the"
0 0 17 3 1 #" "
0 0 17 3 8 #"function"
0 0 17 3 1 #" "
0 0 17 3 12 #"convert-euro"
0 0 17 3 1 #","
0 0 17 29 1 #"\n"
0 0 17 3 5 #"which"
0 0 17 3 1 #" "
0 0 17 3 8 #"converts"
0 0 17 3 1 #" "
0 0 17 3 1 #"a"
0 0 17 3 1 #" "
0 0 17 3 4 #"list"
0 0 17 3 1 #" "
0 0 17 3 2 #"of"
0 0 17 3 1 #" "
0 0 17 3 3 #"US$"
0 0 17 3 1 #" "
0 0 17 3 7 #"amounts"
0 0 17 3 1 #" "
0 0 17 3 4 #"into"
0 0 17 3 1 #" "
0 0 17 3 1 #"a"
0 0 17 3 1 #" "
0 0 17 3 4 #"list"
0 0 17 3 1 #" "
0 0 17 3 2 #"of"
0 0 17 3 1 #" "
0 0 17 3 3 #"\342\202\254"
0 0 17 29 1 #"\n"
0 0 17 3 7 #"amounts"
0 0 17 3 1 #" "
0 0 17 3 5 #"based"
0 0 17 3 1 #" "
0 0 17 3 2 #"on"
0 0 17 3 1 #" "
0 0 17 3 2 #"an"
0 0 17 3 1 #" "
0 0 17 3 8 #"exchange"
0 0 17 3 1 #" "
0 0 17 3 4 #"rate"
0 0 17 3 1 #" "
0 0 17 3 2 #"of"
0 0 17 3 1 #" "
0 0 17 3 7 #"\342\202\2541.22"
0 0 17 3 1 #" "
0 0 17 3 3 #"per"
0 0 17 3 1 #" "
0 0 17 3 4 #"US$."
0 0 17 29 1 #"\n"
0 0 17 29 1 #"\n"
0 0 17 3 4 #"Also"
0 0 17 3 1 #" "
0 0 17 3 3 #"use"
0 0 17 3 1 #" "
0 0 17 3 3 #"map"
0 0 17 3 1 #" "
0 0 17 3 2 #"to"
0 0 17 3 1 #" "
0 0 17 3 6 #"define"
0 0 17 3 1 #" "
0 0 17 3 9 #"convertFC"
0 0 17 3 1 #","
0 0 17 3 1 #" "
0 0 17 3 5 #"which"
0 0 17 3 1 #" "
0 0 17 3 8 #"converts"
0 0 17 3 1 #" "
0 0 17 3 1 #"a"
0 0 17 3 1 #" "
0 0 17 3 4 #"list"
0 0 17 3 1 #" "
0 0 17 3 2 #"of"
0 0 17 29 1 #"\n"
0 0 17 3 10 #"Fahrenheit"
0 0 17 3 1 #" "
0 0 17 3 12 #"measurements"
0 0 17 3 1 #" "
0 0 17 3 2 #"to"
0 0 17 3 1 #" "
0 0 17 3 1 #"a"
0 0 17 3 1 #" "
0 0 17 3 4 #"list"
0 0 17 3 1 #" "
0 0 17 3 2 #"of"
0 0 17 3 1 #" "
0 0 17 3 7 #"Celsius"
0 0 17 3 1 #" "
0 0 17 3 13 #"measurements."
0 0 17 29 1 #"\n"
0 0 17 29 1 #"\n"
0 0 17 3 7 #"Finally"
0 0 17 3 1 #","
0 0 17 3 1 #" "
0 0 17 3 3 #"try"
0 0 17 3 1 #" "
0 0 17 3 4 #"your"
0 0 17 3 1 #" "
0 0 17 3 5 #"hands"
0 0 17 3 1 #" "
0 0 17 3 2 #"at"
0 0 17 3 1 #" "
0 0 17 3 9 #"translate"
0 0 17 3 1 #","
0 0 17 3 1 #" "
0 0 17 3 1 #"a"
0 0 17 3 1 #" "
0 0 17 3 8 #"function"
0 0 17 3 1 #" "
0 0 17 3 4 #"that"
0 0 17 29 1 #"\n"
0 0 17 3 10 #"translates"
0 0 17 3 1 #" "
0 0 17 3 1 #"a"
0 0 17 3 1 #" "
0 0 17 3 4 #"list"
0 0 17 3 1 #" "
0 0 17 3 2 #"of"
0 0 17 3 1 #" "
0 0 17 3 5 #"Posns"
0 0 17 3 1 #" "
0 0 17 3 4 #"into"
0 0 17 3 1 #" "
0 0 17 3 1 #"a"
0 0 17 3 1 #" "
0 0 17 3 4 #"list"
0 0 17 3 1 #" "
0 0 17 3 2 #"of"
0 0 17 3 1 #" "
0 0 17 3 4 #"list"
0 0 17 3 1 #" "
0 0 17 3 2 #"of"
0 0 17 3 1 #" "
0 0 17 3 5 #"pairs"
0 0 17 3 1 #" "
0 0 17 3 2 #"of"
0 0 17 29 1 #"\n"
0 0 17 3 7 #"numbers"
0 0 17 3 1 #","
0 0 17 3 1 #" "
0 0 17 3 4 #"i.e."
0 0 17 3 1 #","
0 0 17 3 2 #" ["
0 0 17 3 7 #"List-of"
0 0 17 3 2 #" ["
0 0 17 3 4 #"list"
0 0 17 3 1 #" "
0 0 17 3 6 #"Number"
0 0 17 3 1 #" "
0 0 17 3 6 #"Number"
0 0 17 3 2 #"]]"
0 0 17 3 1 #"."
0 0 17 29 1 #"\n"
0 0 17 3 2 #"|#"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 18 #";An LoN is one of:"
0 0 24 29 1 #"\n"
0 0 17 3 7 #";-empty"
0 0 24 29 1 #"\n"
0 0 17 3 19 #";-(cons Number LoN)"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 55 #";convert-euro takes an LoN and returns a new LoN of the"
0 0 24 29 1 #"\n"
0 0 17 3 29 #";equivalent values in euros. "
0 0 24 29 1 #"\n"
0 0 17 3 33 #";(define (convert-euro-templ LoN)"
0 0 24 29 1 #"\n"
0 0 17 3 17 #";  (map ... LoN))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 2 #" ("
0 0 14 3 8 #"exchange"
0 0 24 3 1 #" "
0 0 14 3 1 #"x"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 14 3 1 #"*"
0 0 24 3 1 #" "
0 0 21 3 4 #"1.22"
0 0 24 3 1 #" "
0 0 14 3 1 #"x"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 2 #" ("
0 0 14 3 12 #"convert-euro"
0 0 24 3 1 #" "
0 0 14 3 3 #"LoN"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 14 3 3 #"map"
0 0 24 3 1 #" "
0 0 14 3 8 #"exchange"
0 0 24 3 1 #" "
0 0 14 3 3 #"LoN"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 24 3 1 #"("
0 0 14 3 12 #"convert-euro"
0 0 24 3 2 #" ("
0 0 14 3 4 #"list"
0 0 24 3 1 #" "
0 0 21 3 2 #"19"
0 0 24 3 1 #" "
0 0 21 3 2 #"38"
0 0 24 3 1 #" "
0 0 21 3 2 #"27"
0 0 24 3 1 #" "
0 0 21 3 2 #"17"
0 0 24 3 1 #" "
0 0 21 3 2 #"14"
0 0 24 3 1 #" "
0 0 21 3 2 #"11"
0 0 24 3 3 #"))("
0 0 14 3 4 #"list"
0 0 24 3 1 #" "
0 6          10 26 8 #"1159/50\0"
1 #"\0"
8 #"decimal\0"
2 #"1\0"
0 0 24 3 1 #" "
0 6          10 26 8 #"1159/25\0"
1 #"\0"
8 #"decimal\0"
2 #"1\0"
0 0 24 3 1 #" "
0 6          10 26 8 #"1647/50\0"
1 #"\0"
8 #"decimal\0"
2 #"1\0"
0 0 24 3 1 #" "
0 6          10 26 8 #"1037/50\0"
1 #"\0"
8 #"decimal\0"
2 #"1\0"
0 0 24 3 1 #" "
0 6          10 26 7 #"427/25\0"
1 #"\0"
8 #"decimal\0"
2 #"1\0"
0 0 24 3 1 #" "
0 6          10 26 7 #"671/50\0"
1 #"\0"
8 #"decimal\0"
2 #"1\0"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 52 #";convertFC takes an LoN and returns a new LoN of the"
0 0 24 29 1 #"\n"
0 0 17 3 31 #";equivalent values in Celcius. "
0 0 24 29 1 #"\n"
0 0 17 3 30 #";(define (convertFC-templ LoN)"
0 0 24 29 1 #"\n"
0 0 17 3 17 #";  (map ... LoN))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 2 #" ("
0 0 14 3 14 #"convert-helper"
0 0 24 3 1 #" "
0 0 14 3 1 #"x"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 14 3 1 #"*"
0 0 24 3 2 #" ("
0 0 14 3 1 #"/"
0 0 24 3 1 #" "
0 0 21 3 1 #"5"
0 0 24 3 1 #" "
0 0 21 3 1 #"9"
0 0 24 3 3 #") ("
0 0 14 3 1 #"-"
0 0 24 3 1 #" "
0 0 14 3 1 #"x"
0 0 24 3 1 #" "
0 0 21 3 2 #"32"
0 0 24 3 3 #")))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 2 #" ("
0 0 14 3 9 #"convertFC"
0 0 24 3 1 #" "
0 0 14 3 3 #"LoN"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 14 3 3 #"map"
0 0 24 3 1 #" "
0 0 14 3 14 #"convert-helper"
0 0 24 3 1 #" "
0 0 14 3 3 #"LoN"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 24 3 1 #"("
0 0 14 3 9 #"convertFC"
0 0 24 3 2 #" ("
0 0 14 3 4 #"list"
0 0 24 3 1 #" "
0 0 21 3 2 #"38"
0 0 24 3 1 #" "
0 0 21 3 2 #"49"
0 0 24 3 1 #" "
0 0 21 3 2 #"90"
0 0 24 3 1 #" "
0 0 21 3 2 #"37"
0 0 24 3 1 #" "
0 0 21 3 2 #"60"
0 0 24 3 3 #"))("
0 0 14 3 4 #"list"
0 0 24 3 1 #" "
0 6          10 26 5 #"10/3\0"
1 #"\0"
8 #"decimal\0"
2 #"1\0"
0 0 24 3 1 #" "
0 6          10 26 5 #"85/9\0"
1 #"\0"
8 #"decimal\0"
2 #"1\0"
0 0 24 3 1 #" "
0 6          10 26 6 #"290/9\0"
1 #"\0"
8 #"decimal\0"
2 #"1\0"
0 0 24 3 1 #" "
0 6          10 26 5 #"25/9\0"
1 #"\0"
8 #"decimal\0"
2 #"1\0"
0 0 24 3 1 #" "
0 6          10 26 6 #"140/9\0"
1 #"\0"
8 #"decimal\0"
2 #"1\0"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 18 #";An LoP is one of:"
0 0 24 29 1 #"\n"
0 0 17 3 7 #";-empty"
0 0 24 29 1 #"\n"
0 0 17 3 17 #";-(cons Posn LoP)"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 63
#";translate takes an LoP and returns a new list of lists of each"
0 0 24 29 1 #"\n"
0 0 17 3 35 #";posn's respective x and y values. "
0 0 24 29 1 #"\n"
0 0 17 3 30 #";(define (translate-templ LoP)"
0 0 24 29 1 #"\n"
0 0 17 3 17 #";  (map ... LoP))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 2 #" ("
0 0 14 3 16 #"translate-helper"
0 0 24 3 1 #" "
0 0 14 3 1 #"p"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 14 3 4 #"list"
0 0 24 3 2 #" ("
0 0 14 3 6 #"posn-x"
0 0 24 3 1 #" "
0 0 14 3 1 #"p"
0 0 24 3 3 #") ("
0 0 14 3 6 #"posn-y"
0 0 24 3 1 #" "
0 0 14 3 1 #"p"
0 0 24 3 3 #")))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 2 #" ("
0 0 14 3 9 #"translate"
0 0 24 3 1 #" "
0 0 14 3 3 #"LoP"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 14 3 3 #"map"
0 0 24 3 1 #" "
0 0 14 3 16 #"translate-helper"
0 0 24 3 1 #" "
0 0 14 3 3 #"LoP"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 24 3 2 #" ("
0 0 14 3 9 #"translate"
0 0 24 3 2 #" ("
0 0 14 3 4 #"list"
0 0 24 3 2 #" ("
0 0 14 3 9 #"make-posn"
0 0 24 3 1 #" "
0 0 21 3 2 #"10"
0 0 24 3 1 #" "
0 0 21 3 1 #"4"
0 0 24 3 2 #")("
0 0 14 3 9 #"make-posn"
0 0 24 3 1 #" "
0 0 21 3 1 #"3"
0 0 24 3 1 #" "
0 0 21 3 1 #"9"
0 0 24 3 2 #")("
0 0 14 3 9 #"make-posn"
0 0 24 3 1 #" "
0 0 21 3 1 #"6"
0 0 24 3 1 #" "
0 0 21 3 1 #"2"
0 0 24 3 4 #")))("
0 0 14 3 4 #"list"
0 0 24 3 2 #" ("
0 0 14 3 4 #"list"
0 0 24 3 1 #" "
0 0 21 3 2 #"10"
0 0 24 3 1 #" "
0 0 21 3 1 #"4"
0 0 24 3 3 #") ("
0 0 14 3 4 #"list"
0 0 24 3 1 #" "
0 0 21 3 1 #"3"
0 0 24 3 1 #" "
0 0 21 3 1 #"9"
0 0 24 3 3 #") ("
0 0 14 3 4 #"list"
0 0 24 3 1 #" "
0 0 21 3 1 #"6"
0 0 24 3 1 #" "
0 0 21 3 1 #"2"
0 0 24 3 3 #")))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 10 #";Problem 4"
0 0 24 29 1 #"\n"
0 0 17 3 2 #"#|"
0 0 17 29 1 #"\n"
0 0 17 3 65
#"An inventory record specifies the name of an item, a description,"
0 0 17 29 1 #"\n"
0 0 17 3 55 #"the acquisition price, and the recommended sales price."
0 0 17 29 1 #"\n"
0 0 17 3 2 #"|#"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 13 #"define-struct"
0 0 24 3 1 #" "
0 0 14 3 2 #"ir"
0 0 24 3 2 #" ("
0 0 14 3 4 #"name"
0 0 24 3 1 #" "
0 0 14 3 11 #"description"
0 0 24 3 1 #" "
0 0 14 3 7 #"a-price"
0 0 24 3 1 #" "
0 0 14 3 7 #"s-price"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 17 3 23 #"; An ir is a structure:"
0 0 24 29 1 #"\n"
0 0 17 3 42 #";    (make-ir String String Number Number)"
0 0 24 29 1 #"\n"
0 0 17 3 59
#";interpretation: (make-ir name description a-price s-price)"
0 0 24 29 1 #"\n"
0 0 17 3 67
#";represents an inventory record, its name, description, acquisition"
0 0 24 29 1 #"\n"
0 0 17 3 34 #";price and recommended sales price"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 1 #"#"
0 0 17 3 1 #"|"
0 0 17 29 1 #"\n"
0 0 17 3 8 #"Exercise"
0 0 17 3 1 #" "
0 0 17 3 4 #"257."
0 0 17 3 1 #" "
0 0 17 3 6 #"Define"
0 0 17 3 1 #" "
0 0 17 3 13 #"eliminate-exp"
0 0 17 3 1 #","
0 0 17 3 1 #" "
0 0 17 3 5 #"which"
0 0 17 3 1 #" "
0 0 17 3 8 #"consumes"
0 0 17 3 1 #" "
0 0 17 3 1 #"a"
0 0 17 3 1 #" "
0 0 17 3 6 #"number"
0 0 17 3 1 #","
0 0 17 29 1 #"\n"
0 0 17 3 2 #"ua"
0 0 17 3 1 #" "
0 0 17 3 3 #"and"
0 0 17 3 1 #" "
0 0 17 3 1 #"a"
0 0 17 3 1 #" "
0 0 17 3 4 #"list"
0 0 17 3 1 #" "
0 0 17 3 2 #"of"
0 0 17 3 1 #" "
0 0 17 3 9 #"inventory"
0 0 17 3 1 #" "
0 0 17 3 7 #"records"
0 0 17 3 1 #","
0 0 17 3 1 #" "
0 0 17 3 3 #"and"
0 0 17 3 1 #" "
0 0 17 3 2 #"it"
0 0 17 3 1 #" "
0 0 17 3 8 #"produces"
0 0 17 3 1 #" "
0 0 17 3 1 #"a"
0 0 17 3 1 #" "
0 0 17 3 4 #"list"
0 0 17 29 1 #"\n"
0 0 17 3 2 #"of"
0 0 17 3 1 #" "
0 0 17 3 3 #"all"
0 0 17 3 1 #" "
0 0 17 3 5 #"those"
0 0 17 3 1 #" "
0 0 17 3 10 #"structures"
0 0 17 3 1 #" "
0 0 17 3 5 #"whose"
0 0 17 3 1 #" "
0 0 17 3 5 #"sales"
0 0 17 3 1 #" "
0 0 17 3 5 #"price"
0 0 17 3 1 #" "
0 0 17 3 2 #"is"
0 0 17 3 1 #" "
0 0 17 3 5 #"below"
0 0 17 3 1 #" "
0 0 17 3 3 #"ua."
0 0 17 29 1 #"\n"
0 0 17 29 1 #"\n"
0 0 17 3 4 #"Then"
0 0 17 3 1 #" "
0 0 17 3 3 #"use"
0 0 17 3 1 #" "
0 0 17 3 6 #"filter"
0 0 17 3 1 #" "
0 0 17 3 2 #"to"
0 0 17 3 1 #" "
0 0 17 3 6 #"define"
0 0 17 3 1 #" "
0 0 17 3 6 #"recall"
0 0 17 3 1 #","
0 0 17 3 1 #" "
0 0 17 3 5 #"which"
0 0 17 3 1 #" "
0 0 17 3 8 #"consumes"
0 0 17 3 1 #" "
0 0 17 3 3 #"the"
0 0 17 3 1 #" "
0 0 17 3 4 #"name"
0 0 17 3 1 #" "
0 0 17 3 2 #"of"
0 0 17 29 1 #"\n"
0 0 17 3 2 #"an"
0 0 17 3 1 #" "
0 0 17 3 9 #"inventory"
0 0 17 3 1 #" "
0 0 17 3 4 #"item"
0 0 17 3 1 #","
0 0 17 3 1 #" "
0 0 17 3 6 #"called"
0 0 17 3 1 #" "
0 0 17 3 2 #"ty"
0 0 17 3 1 #","
0 0 17 3 1 #" "
0 0 17 3 3 #"and"
0 0 17 3 1 #" "
0 0 17 3 1 #"a"
0 0 17 3 1 #" "
0 0 17 3 4 #"list"
0 0 17 3 1 #" "
0 0 17 3 2 #"of"
0 0 17 3 1 #" "
0 0 17 3 9 #"inventory"
0 0 17 3 1 #" "
0 0 17 3 7 #"records"
0 0 17 29 1 #"\n"
0 0 17 3 3 #"and"
0 0 17 3 1 #" "
0 0 17 3 5 #"which"
0 0 17 3 1 #" "
0 0 17 3 8 #"produces"
0 0 17 3 1 #" "
0 0 17 3 1 #"a"
0 0 17 3 1 #" "
0 0 17 3 4 #"list"
0 0 17 3 1 #" "
0 0 17 3 2 #"of"
0 0 17 3 1 #" "
0 0 17 3 10 #"inventory "
0 0 17 3 7 #"records"
0 0 17 3 1 #" "
0 0 17 3 4 #"that"
0 0 17 3 1 #" "
0 0 17 3 2 #"do"
0 0 17 3 1 #" "
0 0 17 3 3 #"not"
0 0 17 29 1 #"\n"
0 0 17 3 3 #"use"
0 0 17 3 1 #" "
0 0 17 3 3 #"the"
0 0 17 3 1 #" "
0 0 17 3 4 #"name"
0 0 17 3 1 #" "
0 0 17 3 3 #"ty."
0 0 17 29 1 #"\n"
0 0 17 29 1 #"\n"
0 0 17 3 2 #"In"
0 0 17 3 1 #" "
0 0 17 3 8 #"addition"
0 0 17 3 1 #","
0 0 17 3 1 #" "
0 0 17 3 6 #"define"
0 0 17 3 1 #" "
0 0 17 3 9 #"selection"
0 0 17 3 1 #","
0 0 17 3 1 #" "
0 0 17 3 5 #"which"
0 0 17 3 1 #" "
0 0 17 3 8 #"consumes"
0 0 17 3 1 #" "
0 0 17 3 3 #"two"
0 0 17 3 1 #" "
0 0 17 3 5 #"lists"
0 0 17 3 1 #" "
0 0 17 3 2 #"of"
0 0 17 29 1 #"\n"
0 0 17 3 5 #"names"
0 0 17 3 1 #" "
0 0 17 3 3 #"and"
0 0 17 3 1 #" "
0 0 17 3 7 #"selects"
0 0 17 3 1 #" "
0 0 17 3 3 #"all"
0 0 17 3 1 #" "
0 0 17 3 5 #"those"
0 0 17 3 1 #" "
0 0 17 3 4 #"from"
0 0 17 3 1 #" "
0 0 17 3 3 #"the"
0 0 17 3 1 #" "
0 0 17 3 6 #"second"
0 0 17 3 1 #" "
0 0 17 3 3 #"one"
0 0 17 3 1 #" "
0 0 17 3 4 #"that"
0 0 17 3 1 #" "
0 0 17 3 3 #"are"
0 0 17 29 1 #"\n"
0 0 17 3 4 #"also"
0 0 17 3 1 #" "
0 0 17 3 2 #"on"
0 0 17 3 1 #" "
0 0 17 3 3 #"the"
0 0 17 3 1 #" "
0 0 17 3 6 #"first."
0 0 17 29 1 #"\n"
0 0 17 3 2 #"|#"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 18 #";An LoI is one of:"
0 0 24 29 1 #"\n"
0 0 17 3 7 #";-empty"
0 0 24 29 1 #"\n"
0 0 17 3 15 #";-(cons ir LoI)"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 65
#";eliminate-exp takes a number ua and an LoI and returns a list of"
0 0 24 29 1 #"\n"
0 0 17 3 58
#";results of inventory records whose sale price is below ua"
0 0 24 29 1 #"\n"
0 0 17 3 37 #";(define (eliminate-exp-templ ua LoI)"
0 0 24 29 1 #"\n"
0 0 17 3 8 #";  (cond"
0 0 24 29 1 #"\n"
0 0 17 3 23 #";    [(empty? LoI) ...]"
0 0 24 29 1 #"\n"
0 0 17 3 72
(
 #";    [(> ua (ir-s-price (first LoI))) ... (eliminate-exp ua (rest Lo"
 #"I))]"
) 0 0 24 29 1 #"\n"
0 0 17 3 43 #";    [else (eliminate-exp ua (rest LoI))]))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 2 #" ("
0 0 14 3 13 #"eliminate-exp"
0 0 24 3 1 #" "
0 0 14 3 2 #"ua"
0 0 24 3 1 #" "
0 0 14 3 3 #"LoI"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 15 3 4 #"cond"
0 0 24 29 1 #"\n"
0 0 24 3 6 #"    [("
0 0 14 3 6 #"empty?"
0 0 24 3 1 #" "
0 0 14 3 3 #"LoI"
0 0 24 3 2 #") "
0 0 14 3 5 #"empty"
0 0 24 3 1 #"]"
0 0 24 29 1 #"\n"
0 0 24 3 6 #"    [("
0 0 14 3 1 #">"
0 0 24 3 1 #" "
0 0 14 3 2 #"ua"
0 0 24 3 2 #" ("
0 0 14 3 10 #"ir-s-price"
0 0 24 3 2 #" ("
0 0 14 3 5 #"first"
0 0 24 3 1 #" "
0 0 14 3 3 #"LoI"
0 0 24 3 5 #"))) ("
0 0 14 3 4 #"cons"
0 0 24 3 2 #" ("
0 0 14 3 5 #"first"
0 0 24 3 1 #" "
0 0 14 3 3 #"LoI"
0 0 24 3 3 #") ("
0 0 14 3 13 #"eliminate-exp"
0 0 24 3 1 #" "
0 0 14 3 2 #"ua"
0 0 24 3 2 #" ("
0 0 14 3 4 #"rest"
0 0 24 3 1 #" "
0 0 14 3 3 #"LoI"
0 0 24 3 4 #")))]"
0 0 24 29 1 #"\n"
0 0 24 3 5 #"    ["
0 0 14 3 4 #"else"
0 0 24 3 2 #" ("
0 0 14 3 13 #"eliminate-exp"
0 0 24 3 1 #" "
0 0 14 3 2 #"ua"
0 0 24 3 2 #" ("
0 0 14 3 4 #"rest"
0 0 24 3 1 #" "
0 0 14 3 3 #"LoI"
0 0 24 3 5 #"))]))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 24 3 2 #" ("
0 0 14 3 13 #"eliminate-exp"
0 0 24 3 1 #" "
0 0 21 3 2 #"10"
0 0 24 3 2 #" ("
0 0 14 3 4 #"list"
0 0 24 3 2 #" ("
0 0 14 3 7 #"make-ir"
0 0 24 3 1 #" "
0 0 19 3 3 #"\"a\""
0 0 24 3 1 #" "
0 0 19 3 7 #"\"stuff\""
0 0 24 3 1 #" "
0 0 21 3 2 #"11"
0 0 24 3 1 #" "
0 0 21 3 2 #"15"
0 0 24 3 3 #") ("
0 0 14 3 7 #"make-ir"
0 0 24 3 1 #" "
0 0 19 3 3 #"\"b\""
0 0 24 3 1 #" "
0 0 19 3 7 #"\"stuff\""
0 0 24 3 1 #" "
0 0 21 3 1 #"5"
0 0 24 3 1 #" "
0 0 21 3 1 #"2"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 39 #"                                      ("
0 0 14 3 7 #"make-ir"
0 0 24 3 1 #" "
0 0 19 3 3 #"\"c\""
0 0 24 3 1 #" "
0 0 19 3 7 #"\"stuff\""
0 0 24 3 1 #" "
0 0 21 3 2 #"17"
0 0 24 3 1 #" "
0 0 21 3 1 #"9"
0 0 24 3 3 #") ("
0 0 14 3 7 #"make-ir"
0 0 24 3 1 #" "
0 0 19 3 3 #"\"d\""
0 0 24 3 1 #" "
0 0 19 3 7 #"\"stuff\""
0 0 24 3 1 #" "
0 0 21 3 1 #"1"
0 0 24 3 1 #" "
0 0 21 3 1 #"3"
0 0 24 3 3 #")))"
0 0 24 29 1 #"\n"
0 0 24 3 15 #"              ("
0 0 14 3 4 #"list"
0 0 24 3 2 #" ("
0 0 14 3 7 #"make-ir"
0 0 24 3 1 #" "
0 0 19 3 3 #"\"b\""
0 0 24 3 1 #" "
0 0 19 3 7 #"\"stuff\""
0 0 24 3 1 #" "
0 0 21 3 1 #"5"
0 0 24 3 1 #" "
0 0 21 3 1 #"2"
0 0 24 3 3 #") ("
0 0 14 3 7 #"make-ir"
0 0 24 3 1 #" "
0 0 19 3 3 #"\"c\""
0 0 24 3 1 #" "
0 0 19 3 7 #"\"stuff\""
0 0 24 3 1 #" "
0 0 21 3 2 #"17"
0 0 24 3 1 #" "
0 0 21 3 1 #"9"
0 0 24 3 3 #") ("
0 0 14 3 7 #"make-ir"
0 0 24 3 1 #" "
0 0 19 3 3 #"\"d\""
0 0 24 3 1 #" "
0 0 19 3 7 #"\"stuff\""
0 0 24 3 1 #" "
0 0 21 3 1 #"1"
0 0 24 3 1 #" "
0 0 21 3 1 #"3"
0 0 24 3 3 #")))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 58
#";recall takes a String ty and an LoI and returns a list of"
0 0 24 29 1 #"\n"
0 0 17 3 63
#";results of inventory records whose name is not the same as ty "
0 0 24 29 1 #"\n"
0 0 17 3 24 #";(define (recall ty LoI)"
0 0 24 29 1 #"\n"
0 0 17 3 6 #";  ..."
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 75
(
 #";was unable to find a way to utilize filter without lambda since you"
 #" cannot"
) 0 0 24 29 1 #"\n"
0 0 17 3 84
(
 #";use a function that takes 2 variables (ie: ty and LoI) with filter,"
 #" it only accepts"
) 0 0 24 29 1 #"\n"
0 0 17 3 81
(
 #";a function with one variable, LoI. Additionally, putting in a helpe"
 #"r function is"
) 0 0 24 29 1 #"\n"
0 0 17 3 80
(
 #";fruitless since you always have to input both ty and LoI in order t"
 #"o use them. "
) 0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 2 #" ("
0 0 14 3 6 #"recall"
0 0 24 3 1 #" "
0 0 14 3 2 #"ty"
0 0 24 3 1 #" "
0 0 14 3 3 #"LoI"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 14 3 6 #"filter"
0 0 24 3 2 #" ("
0 0 15 3 6 #"lambda"
0 0 24 3 2 #" ("
0 0 14 3 1 #"x"
0 0 24 3 3 #") ("
0 0 14 3 3 #"not"
0 0 24 3 1 #"("
0 0 14 3 8 #"string=?"
0 0 24 3 1 #" "
0 0 14 3 2 #"ty"
0 0 24 3 2 #" ("
0 0 14 3 7 #"ir-name"
0 0 24 3 1 #" "
0 0 14 3 1 #"x"
0 0 24 3 5 #")))) "
0 0 14 3 3 #"LoI"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 24 3 2 #" ("
0 0 14 3 6 #"recall"
0 0 24 3 1 #" "
0 0 19 3 3 #"\"b\""
0 0 24 3 2 #" ("
0 0 14 3 4 #"list"
0 0 24 3 2 #" ("
0 0 14 3 7 #"make-ir"
0 0 24 3 1 #" "
0 0 19 3 3 #"\"a\""
0 0 24 3 1 #" "
0 0 19 3 7 #"\"stuff\""
0 0 24 3 1 #" "
0 0 21 3 2 #"11"
0 0 24 3 1 #" "
0 0 21 3 2 #"15"
0 0 24 3 3 #") ("
0 0 14 3 7 #"make-ir"
0 0 24 3 1 #" "
0 0 19 3 3 #"\"b\""
0 0 24 3 1 #" "
0 0 19 3 7 #"\"stuff\""
0 0 24 3 1 #" "
0 0 21 3 1 #"5"
0 0 24 3 1 #" "
0 0 21 3 1 #"2"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 33 #"                                ("
0 0 14 3 7 #"make-ir"
0 0 24 3 1 #" "
0 0 19 3 3 #"\"c\""
0 0 24 3 1 #" "
0 0 19 3 7 #"\"stuff\""
0 0 24 3 1 #" "
0 0 21 3 2 #"17"
0 0 24 3 1 #" "
0 0 21 3 1 #"9"
0 0 24 3 3 #") ("
0 0 14 3 7 #"make-ir"
0 0 24 3 1 #" "
0 0 19 3 3 #"\"d\""
0 0 24 3 1 #" "
0 0 19 3 7 #"\"stuff\""
0 0 24 3 1 #" "
0 0 21 3 1 #"1"
0 0 24 3 1 #" "
0 0 21 3 1 #"3"
0 0 24 3 3 #")))"
0 0 24 29 1 #"\n"
0 0 24 3 15 #"              ("
0 0 14 3 4 #"list"
0 0 24 3 2 #" ("
0 0 14 3 7 #"make-ir"
0 0 24 3 1 #" "
0 0 19 3 3 #"\"a\""
0 0 24 3 1 #" "
0 0 19 3 7 #"\"stuff\""
0 0 24 3 1 #" "
0 0 21 3 2 #"11"
0 0 24 3 1 #" "
0 0 21 3 2 #"15"
0 0 24 3 3 #") ("
0 0 14 3 7 #"make-ir"
0 0 24 3 1 #" "
0 0 19 3 3 #"\"c\""
0 0 24 3 1 #" "
0 0 19 3 7 #"\"stuff\""
0 0 24 3 1 #" "
0 0 21 3 2 #"17"
0 0 24 3 1 #" "
0 0 21 3 1 #"9"
0 0 24 3 3 #") ("
0 0 14 3 7 #"make-ir"
0 0 24 3 1 #" "
0 0 19 3 3 #"\"d\""
0 0 24 3 1 #" "
0 0 19 3 7 #"\"stuff\""
0 0 24 3 1 #" "
0 0 21 3 1 #"1"
0 0 24 3 1 #" "
0 0 21 3 1 #"3"
0 0 24 3 3 #")))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 80
(
 #";selection takes two lists of strings and returns a list of all the "
 #"strings that"
) 0 0 24 29 1 #"\n"
0 0 17 3 44 #";are in the second list and the first list. "
0 0 24 29 1 #"\n"
0 0 17 3 30 #";(define (selection LoN1 LoN2)"
0 0 24 29 1 #"\n"
0 0 17 3 6 #";  ..."
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 2 #" ("
0 0 14 3 9 #"selection"
0 0 24 3 1 #" "
0 0 14 3 4 #"LoS1"
0 0 24 3 1 #" "
0 0 14 3 4 #"LoS2"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 14 3 6 #"filter"
0 0 24 3 2 #" ("
0 0 15 3 6 #"lambda"
0 0 24 3 2 #" ("
0 0 14 3 1 #"x"
0 0 24 3 3 #") ("
0 0 14 3 7 #"member?"
0 0 24 3 1 #" "
0 0 14 3 1 #"x"
0 0 24 3 1 #" "
0 0 14 3 4 #"LoS1"
0 0 24 3 3 #")) "
0 0 14 3 4 #"LoS2"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 24 3 2 #" ("
0 0 14 3 9 #"selection"
0 0 24 3 2 #" ("
0 0 14 3 4 #"list"
0 0 24 3 1 #" "
0 0 19 3 6 #"\"asdf\""
0 0 24 3 1 #" "
0 0 19 3 7 #"\"sdfsd\""
0 0 24 3 1 #" "
0 0 19 3 9 #"\"sdasfas\""
0 0 24 3 1 #" "
0 0 19 3 9 #"\"sdfasdf\""
0 0 24 3 2 #")("
0 0 14 3 4 #"list"
0 0 24 3 1 #" "
0 0 19 3 9 #"\"asdsdff\""
0 0 24 3 1 #" "
0 0 19 3 9 #"\"sdfassd\""
0 0 24 3 1 #" "
0 0 19 3 9 #"\"sdasfas\""
0 0 24 3 1 #" "
0 0 19 3 13 #"\"sdfasdsdfdf\""
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 15 #"              ("
0 0 14 3 4 #"list"
0 0 24 3 1 #" "
0 0 19 3 9 #"\"sdasfas\""
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 10 #";Problem 5"
0 0 24 29 1 #"\n"
0 0 17 3 2 #"#|"
0 0 17 29 1 #"\n"
0 0 17 3 9 #"Interpret"
0 0 17 3 1 #" "
0 0 17 3 3 #"the"
0 0 17 3 1 #" "
0 0 17 3 9 #"following"
0 0 17 3 1 #" "
0 0 17 3 4 #"data"
0 0 17 3 1 #" "
0 0 17 3 11 #"definition:"
0 0 17 29 1 #"\n"
0 0 17 3 30 #"; [List-of [Number -> Number]]"
0 0 17 29 1 #"\n"
0 0 17 29 1 #"\n"
0 0 17 3 6 #"Design"
0 0 17 3 1 #" "
0 0 17 3 5 #"at-0."
0 0 17 3 1 #" "
0 0 17 3 3 #"The"
0 0 17 3 1 #" "
0 0 17 3 8 #"function"
0 0 17 3 1 #" "
0 0 17 3 8 #"consumes"
0 0 17 3 1 #" "
0 0 17 3 1 #"a"
0 0 17 3 1 #" "
0 0 17 3 4 #"list"
0 0 17 3 1 #" "
0 0 17 3 2 #"of"
0 0 17 3 1 #" "
0 0 17 3 9 #"functions"
0 0 17 3 1 #" "
0 0 17 3 4 #"from"
0 0 17 29 1 #"\n"
0 0 17 3 7 #"numbers"
0 0 17 3 1 #" "
0 0 17 3 2 #"to"
0 0 17 3 1 #" "
0 0 17 3 7 #"numbers"
0 0 17 3 1 #" "
0 0 17 3 3 #"and"
0 0 17 3 1 #" "
0 0 17 3 8 #"produces"
0 0 17 3 1 #" "
0 0 17 3 3 #"the"
0 0 17 3 1 #" "
0 0 17 3 4 #"list"
0 0 17 3 1 #" "
0 0 17 3 2 #"of"
0 0 17 3 1 #" "
0 0 17 3 7 #"results"
0 0 17 3 1 #" "
0 0 17 3 2 #"of"
0 0 17 29 1 #"\n"
0 0 17 3 8 #"applying"
0 0 17 3 1 #" "
0 0 17 3 5 #"these"
0 0 17 3 1 #" "
0 0 17 3 9 #"functions"
0 0 17 3 1 #" "
0 0 17 3 2 #"to"
0 0 17 3 1 #" "
0 0 17 3 2 #"0."
0 0 17 29 1 #"\n"
0 0 17 3 2 #"|#"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 18 #";An LoF is one of:"
0 0 24 29 1 #"\n"
0 0 17 3 7 #";-empty"
0 0 24 29 1 #"\n"
0 0 17 3 21 #";-(cons function LoF)"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 58
#";at-0 takes an LoF (list of functions) l returns a list of"
0 0 24 29 1 #"\n"
0 0 17 3 41 #";results of applying these functinos to 0"
0 0 24 29 1 #"\n"
0 0 17 3 23 #";(define (at-0-templ l)"
0 0 24 29 1 #"\n"
0 0 17 3 8 #";  (cond"
0 0 24 29 1 #"\n"
0 0 17 3 22 #";    [(empty? l) ... ]"
0 0 24 29 1 #"\n"
0 0 17 3 53 #";    [else ... (first l) ... (at-0-templ (rest l))]))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 2 #" ("
0 0 14 3 4 #"at-0"
0 0 24 3 1 #" "
0 0 14 3 1 #"l"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 15 3 4 #"cond"
0 0 24 29 1 #"\n"
0 0 24 3 6 #"    [("
0 0 14 3 6 #"empty?"
0 0 24 3 1 #" "
0 0 14 3 1 #"l"
0 0 24 3 2 #") "
0 0 14 3 5 #"empty"
0 0 24 3 1 #"]"
0 0 24 29 1 #"\n"
0 0 24 3 5 #"    ["
0 0 14 3 4 #"else"
0 0 24 3 2 #" ("
0 0 14 3 4 #"cons"
0 0 24 3 2 #" ("
0 0 14 3 5 #"first"
0 0 24 3 2 #" ("
0 0 14 3 3 #"map"
0 0 24 3 2 #" ("
0 0 14 3 5 #"first"
0 0 24 3 1 #" "
0 0 14 3 1 #"l"
0 0 24 3 3 #") ("
0 0 14 3 4 #"list"
0 0 24 3 1 #" "
0 0 21 3 1 #"0"
0 0 24 3 5 #"))) ("
0 0 14 3 4 #"at-0"
0 0 24 3 2 #" ("
0 0 14 3 4 #"rest"
0 0 24 3 1 #" "
0 0 14 3 1 #"l"
0 0 24 3 6 #")))]))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 2 #" ("
0 0 14 3 10 #"f1-example"
0 0 24 3 1 #" "
0 0 14 3 1 #"x"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 14 3 1 #"+"
0 0 24 3 1 #" "
0 0 14 3 1 #"x"
0 0 24 3 1 #" "
0 0 21 3 1 #"5"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 2 #" ("
0 0 14 3 10 #"f2-example"
0 0 24 3 1 #" "
0 0 14 3 1 #"x"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 14 3 1 #"-"
0 0 24 3 1 #" "
0 0 14 3 1 #"x"
0 0 24 3 1 #" "
0 0 21 3 1 #"7"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 24 3 2 #" ("
0 0 14 3 4 #"at-0"
0 0 24 3 2 #" ("
0 0 14 3 4 #"list"
0 0 24 3 1 #" "
0 0 14 3 10 #"f1-example"
0 0 24 3 1 #" "
0 0 14 3 10 #"f2-example"
0 0 24 3 4 #")) ("
0 0 14 3 4 #"list"
0 0 24 3 1 #" "
0 0 21 3 1 #"5"
0 0 24 3 1 #" "
0 0 21 3 2 #"-7"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 10 #";Problem 6"
0 0 24 29 1 #"\n"
0 0 17 3 2 #"#|"
0 0 17 29 1 #"\n"
0 0 17 3 6 #"Design"
0 0 17 3 1 #" "
0 0 17 3 12 #"find-string."
0 0 17 3 1 #" "
0 0 17 3 3 #"The"
0 0 17 3 1 #" "
0 0 17 3 8 #"function"
0 0 17 3 1 #" "
0 0 17 3 8 #"consumes"
0 0 17 3 1 #" "
0 0 17 3 1 #"a"
0 0 17 3 2 #" ["
0 0 17 3 7 #"List-of"
0 0 17 3 1 #" "
0 0 17 3 6 #"String"
0 0 17 3 1 #"]"
0 0 17 29 1 #"\n"
0 0 17 3 3 #"and"
0 0 17 3 1 #" "
0 0 17 3 1 #"a"
0 0 17 3 1 #" "
0 0 17 3 6 #"String"
0 0 17 3 44 #"; it returns a true if and only if the given"
0 0 17 29 1 #"\n"
0 0 17 3 6 #"string"
0 0 17 3 1 #" "
0 0 17 3 2 #"is"
0 0 17 3 1 #" "
0 0 17 3 1 #"a"
0 0 17 3 1 #" "
0 0 17 3 6 #"member"
0 0 17 3 1 #" "
0 0 17 3 2 #"of"
0 0 17 3 1 #" "
0 0 17 3 3 #"the"
0 0 17 3 1 #" "
0 0 17 3 5 #"list."
0 0 17 29 1 #"\n"
0 0 17 29 1 #"\n"
0 0 17 3 8 #"Abstract"
0 0 17 3 1 #" "
0 0 17 3 11 #"find-string"
0 0 17 3 1 #" "
0 0 17 3 2 #"to"
0 0 17 3 1 #" "
0 0 17 3 19 #"generic-find-string"
0 0 17 3 1 #" "
0 0 17 3 2 #"so"
0 0 17 3 1 #" "
0 0 17 3 4 #"that"
0 0 17 3 1 #" "
0 0 17 3 3 #"the"
0 0 17 29 1 #"\n"
0 0 17 3 17 #"string-comparison"
0 0 17 3 1 #" "
0 0 17 3 9 #"operation"
0 0 17 3 1 #" "
0 0 17 3 2 #"it"
0 0 17 3 1 #" "
0 0 17 3 4 #"uses"
0 0 17 3 1 #" "
0 0 17 3 2 #"is"
0 0 17 3 1 #" "
0 0 17 3 1 #"a"
0 0 17 3 1 #" "
0 0 17 3 10 #"parameter."
0 0 17 3 1 #" "
0 0 17 3 4 #"Then"
0 0 17 3 1 #" "
0 0 17 3 3 #"use"
0 0 17 29 1 #"\n"
0 0 17 3 4 #"this"
0 0 17 3 1 #" "
0 0 17 3 11 #"abstraction"
0 0 17 3 1 #" "
0 0 17 3 2 #"to"
0 0 17 3 1 #" "
0 0 17 3 6 #"define"
0 0 17 3 1 #" "
0 0 17 3 26 #"find-string-case-sensitive"
0 0 17 3 1 #","
0 0 17 3 1 #" "
0 0 17 3 5 #"which"
0 0 17 29 1 #"\n"
0 0 17 3 6 #"should"
0 0 17 3 1 #" "
0 0 17 3 7 #"operate"
0 0 17 3 1 #" "
0 0 17 3 3 #"the"
0 0 17 3 1 #" "
0 0 17 3 4 #"same"
0 0 17 3 1 #" "
0 0 17 3 3 #"way"
0 0 17 3 1 #" "
0 0 17 3 2 #"as"
0 0 17 3 1 #" "
0 0 17 3 3 #"the"
0 0 17 3 1 #" "
0 0 17 3 8 #"original"
0 0 17 3 1 #" "
0 0 17 3 11 #"find-string"
0 0 17 3 1 #","
0 0 17 3 1 #" "
0 0 17 3 3 #"and"
0 0 17 29 1 #"\n"
0 0 17 3 28 #"find-string-case-insensitive"
0 0 17 3 1 #","
0 0 17 3 1 #" "
0 0 17 3 5 #"which"
0 0 17 3 1 #" "
0 0 17 3 3 #"has"
0 0 17 3 1 #" "
0 0 17 3 3 #"the"
0 0 17 3 1 #" "
0 0 17 3 4 #"same"
0 0 17 3 1 #" "
0 0 17 3 8 #"contract"
0 0 17 3 1 #" "
0 0 17 3 2 #"as"
0 0 17 29 1 #"\n"
0 0 17 3 11 #"find-string"
0 0 17 3 1 #" "
0 0 17 3 3 #"but"
0 0 17 3 1 #" "
0 0 17 3 7 #"ignores"
0 0 17 3 1 #" "
0 0 17 3 3 #"the"
0 0 17 3 1 #" "
0 0 17 3 4 #"case"
0 0 17 3 1 #" "
0 0 17 3 2 #"of"
0 0 17 3 1 #" "
0 0 17 3 10 #"alphabetic"
0 0 17 3 1 #" "
0 0 17 3 10 #"characters"
0 0 17 29 1 #"\n"
0 0 17 3 4 #"when"
0 0 17 3 30 #" comparing strings. That is, \""
0 0 17 3 1 #"a"
0 0 17 3 1 #"\""
0 0 17 3 1 #" "
0 0 17 3 2 #"is"
0 0 17 3 1 #" "
0 0 17 3 10 #"considered"
0 0 17 3 1 #" "
0 0 17 3 3 #"the"
0 0 17 3 1 #" "
0 0 17 3 4 #"same"
0 0 17 29 1 #"\n"
0 0 17 3 4 #"as \""
0 0 17 3 1 #"A"
0 0 17 3 1 #"\""
0 0 17 3 1 #" "
0 0 17 3 3 #"and"
0 0 17 3 1 #" "
0 0 17 3 2 #"so"
0 0 17 3 1 #" "
0 0 17 3 2 #"on"
0 0 17 3 44 #"; non-alphabetic characters must still match"
0 0 17 29 1 #"\n"
0 0 17 3 8 #"exactly."
0 0 17 3 1 #" "
0 0 17 3 4 #"Look"
0 0 17 3 1 #" "
0 0 17 3 2 #"in"
0 0 17 3 1 #" "
0 0 17 3 3 #"the"
0 0 17 3 1 #" "
0 0 17 3 13 #"documentation"
0 0 17 3 1 #" "
0 0 17 3 3 #"for"
0 0 17 3 1 #" "
0 0 17 3 3 #"ISL"
0 0 17 3 1 #" "
0 0 17 3 2 #"to"
0 0 17 3 1 #" "
0 0 17 3 4 #"find"
0 0 17 3 1 #" "
0 0 17 3 11 #"appropriate"
0 0 17 29 1 #"\n"
0 0 17 3 9 #"primitive"
0 0 17 3 1 #" "
0 0 17 3 10 #"functions."
0 0 17 29 1 #"\n"
0 0 17 3 2 #"|#"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 18 #";An LoS is one of:"
0 0 24 29 1 #"\n"
0 0 17 3 7 #";-empty"
0 0 24 29 1 #"\n"
0 0 17 3 19 #";-(cons String LoF)"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 60
#";find-string takes an LoS (list of Strings) and a string and"
0 0 24 29 1 #"\n"
0 0 17 3 56 #";returns true if the string is contained within the list"
0 0 24 29 1 #"\n"
0 0 17 3 34 #";(define (find-string-templ LoS s)"
0 0 24 29 1 #"\n"
0 0 17 3 8 #";  (cond"
0 0 24 29 1 #"\n"
0 0 17 3 24 #";    [(empty? LoS) ... ]"
0 0 24 29 1 #"\n"
0 0 17 3 35 #";    [(string=? (first LoS) s) ...]"
0 0 24 29 1 #"\n"
0 0 17 3 40 #";    [else (find-string (rest LoS) s)]))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 2 #" ("
0 0 14 3 11 #"find-string"
0 0 24 3 1 #" "
0 0 14 3 3 #"LoS"
0 0 24 3 1 #" "
0 0 14 3 1 #"s"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 15 3 4 #"cond"
0 0 24 29 1 #"\n"
0 0 24 3 6 #"    [("
0 0 14 3 6 #"empty?"
0 0 24 3 1 #" "
0 0 14 3 3 #"LoS"
0 0 24 3 2 #") "
0 0 14 3 5 #"false"
0 0 24 3 1 #"]"
0 0 24 29 1 #"\n"
0 0 24 3 6 #"    [("
0 0 14 3 8 #"string=?"
0 0 24 3 2 #" ("
0 0 14 3 5 #"first"
0 0 24 3 1 #" "
0 0 14 3 3 #"LoS"
0 0 24 3 2 #") "
0 0 14 3 1 #"s"
0 0 24 3 2 #") "
0 0 14 3 4 #"true"
0 0 24 3 1 #"]"
0 0 24 29 1 #"\n"
0 0 24 3 5 #"    ["
0 0 14 3 4 #"else"
0 0 24 3 2 #" ("
0 0 14 3 11 #"find-string"
0 0 24 3 2 #" ("
0 0 14 3 4 #"rest"
0 0 24 3 1 #" "
0 0 14 3 3 #"LoS"
0 0 24 3 2 #") "
0 0 14 3 1 #"s"
0 0 24 3 4 #")]))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 24 3 2 #" ("
0 0 14 3 11 #"find-string"
0 0 24 3 2 #" ("
0 0 14 3 4 #"list"
0 0 24 3 1 #" "
0 0 19 3 6 #"\"sadf\""
0 0 24 3 1 #" "
0 0 19 3 5 #"\"asd\""
0 0 24 3 1 #" "
0 0 19 3 11 #"\"sdfsdfsda\""
0 0 24 3 1 #" "
0 0 19 3 11 #"\"asdfdsfsa\""
0 0 24 3 2 #") "
0 0 19 3 11 #"\"sdfsdfsda\""
0 0 24 3 2 #") "
0 0 14 3 4 #"true"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 24 3 2 #" ("
0 0 14 3 11 #"find-string"
0 0 24 3 2 #" ("
0 0 14 3 4 #"list"
0 0 24 3 1 #" "
0 0 19 3 6 #"\"sadf\""
0 0 24 3 1 #" "
0 0 19 3 5 #"\"asd\""
0 0 24 3 1 #" "
0 0 19 3 11 #"\"sdfsdfsda\""
0 0 24 3 1 #" "
0 0 19 3 11 #"\"asdfdsfsa\""
0 0 24 3 2 #") "
0 0 19 3 6 #"\"uuue\""
0 0 24 3 2 #") "
0 0 14 3 5 #"false"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 64
#";generic-find-string takes an LoS (list of Strings) a string and"
0 0 24 29 1 #"\n"
0 0 17 3 70
(
 #";a function and returns true if the LoS and string meet the paramete"
 #"rs"
) 0 0 24 29 1 #"\n"
0 0 17 3 24 #";of the given function. "
0 0 24 29 1 #"\n"
0 0 17 3 43 #";(define (generic-find-string-tmpl LoS s f)"
0 0 24 29 1 #"\n"
0 0 17 3 8 #";  (cond"
0 0 24 29 1 #"\n"
0 0 17 3 24 #";    [(empty? LoS) ... ]"
0 0 24 29 1 #"\n"
0 0 17 3 29 #";    [(f (first LoS) s) ... ]"
0 0 24 29 1 #"\n"
0 0 17 3 50 #";    [else (generic-find-string (rest LoS) s f)]))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 2 #" ("
0 0 14 3 19 #"generic-find-string"
0 0 24 3 1 #" "
0 0 14 3 3 #"LoS"
0 0 24 3 1 #" "
0 0 14 3 1 #"s"
0 0 24 3 1 #" "
0 0 14 3 1 #"f"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 15 3 4 #"cond"
0 0 24 29 1 #"\n"
0 0 24 3 6 #"    [("
0 0 14 3 6 #"empty?"
0 0 24 3 1 #" "
0 0 14 3 3 #"LoS"
0 0 24 3 2 #") "
0 0 14 3 5 #"false"
0 0 24 3 1 #"]"
0 0 24 29 1 #"\n"
0 0 24 3 6 #"    [("
0 0 14 3 1 #"f"
0 0 24 3 2 #" ("
0 0 14 3 5 #"first"
0 0 24 3 1 #" "
0 0 14 3 3 #"LoS"
0 0 24 3 2 #") "
0 0 14 3 1 #"s"
0 0 24 3 2 #") "
0 0 14 3 4 #"true"
0 0 24 3 1 #"]"
0 0 24 29 1 #"\n"
0 0 24 3 5 #"    ["
0 0 14 3 4 #"else"
0 0 24 3 2 #" ("
0 0 14 3 19 #"generic-find-string"
0 0 24 3 2 #" ("
0 0 14 3 4 #"rest"
0 0 24 3 1 #" "
0 0 14 3 3 #"LoS"
0 0 24 3 2 #") "
0 0 14 3 1 #"s"
0 0 24 3 1 #" "
0 0 14 3 1 #"f"
0 0 24 3 4 #")]))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 24 3 2 #" ("
0 0 14 3 19 #"generic-find-string"
0 0 24 3 2 #" ("
0 0 14 3 4 #"list"
0 0 24 3 1 #" "
0 0 19 3 6 #"\"sadf\""
0 0 24 3 1 #" "
0 0 19 3 5 #"\"asd\""
0 0 24 3 1 #" "
0 0 19 3 11 #"\"sdfsdfsda\""
0 0 24 3 1 #" "
0 0 19 3 11 #"\"asdfdsfsa\""
0 0 24 3 2 #") "
0 0 19 3 11 #"\"sdfsdfsda\""
0 0 24 3 1 #" "
0 0 14 3 8 #"string=?"
0 0 24 3 2 #") "
0 0 14 3 4 #"true"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 24 3 2 #" ("
0 0 14 3 19 #"generic-find-string"
0 0 24 3 2 #" ("
0 0 14 3 4 #"list"
0 0 24 3 1 #" "
0 0 19 3 6 #"\"sadf\""
0 0 24 3 1 #" "
0 0 19 3 5 #"\"asd\""
0 0 24 3 1 #" "
0 0 19 3 11 #"\"sdfsdfsda\""
0 0 24 3 1 #" "
0 0 19 3 11 #"\"asdfdsfsa\""
0 0 24 3 2 #") "
0 0 19 3 6 #"\"uuue\""
0 0 24 3 1 #" "
0 0 14 3 8 #"string=?"
0 0 24 3 2 #") "
0 0 14 3 5 #"false"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 73
(
 #";find-string-case-insensitive takes an LoS (list of Strings) a strin"
 #"g and"
) 0 0 24 29 1 #"\n"
0 0 17 3 73
(
 #";returns true if the string is contained within the LoS, assuming ca"
 #"pital"
) 0 0 24 29 1 #"\n"
0 0 17 3 36 #";and lowercase letters are the same."
0 0 24 29 1 #"\n"
0 0 17 3 51 #";(define (find-string-case-insensitive-templ LoS s)"
0 0 24 29 1 #"\n"
0 0 17 3 8 #";  ... )"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 2 #" ("
0 0 14 3 28 #"find-string-case-insensitive"
0 0 24 3 1 #" "
0 0 14 3 3 #"LoS"
0 0 24 3 1 #" "
0 0 14 3 1 #"s"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 14 3 19 #"generic-find-string"
0 0 24 3 1 #" "
0 0 14 3 3 #"LoS"
0 0 24 3 1 #" "
0 0 14 3 1 #"s"
0 0 24 3 1 #" "
0 0 14 3 11 #"string-ci=?"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 24 3 2 #" ("
0 0 14 3 28 #"find-string-case-insensitive"
0 0 24 3 2 #" ("
0 0 14 3 4 #"list"
0 0 24 3 1 #" "
0 0 19 3 6 #"\"sadf\""
0 0 24 3 1 #" "
0 0 19 3 5 #"\"asd\""
0 0 24 3 1 #" "
0 0 19 3 11 #"\"sdfsdfsda\""
0 0 24 3 1 #" "
0 0 19 3 11 #"\"asdfdsfsa\""
0 0 24 3 2 #") "
0 0 19 3 11 #"\"SdfSdFsda\""
0 0 24 3 2 #") "
0 0 14 3 4 #"true"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 24 3 2 #" ("
0 0 14 3 28 #"find-string-case-insensitive"
0 0 24 3 2 #" ("
0 0 14 3 4 #"list"
0 0 24 3 1 #" "
0 0 19 3 6 #"\"sadf\""
0 0 24 3 1 #" "
0 0 19 3 5 #"\"asd\""
0 0 24 3 1 #" "
0 0 19 3 11 #"\"sdfsdfsda\""
0 0 24 3 1 #" "
0 0 19 3 11 #"\"asdfdsfsa\""
0 0 24 3 2 #") "
0 0 19 3 6 #"\"uUue\""
0 0 24 3 2 #") "
0 0 14 3 5 #"false"
0 0 24 3 1 #")"
0           0
